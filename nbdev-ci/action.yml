name: 'nbdev-ci'
description: 'Test with nbdev'
inputs:
  pre:
    description: 'Install prerelease nbdev/execnb from master?'
    required: false
    default: ''
  version:
    description: 'Version of python to set up'
    required: false
    default: '3.10'
  skip_test:
    description: 'Skip tests?'
    required: false
    default: ''
  prod_editable_install:
    description: 'Use editable install without dev extras?'
    required: false
    default: 'false'
  flags:
    description: 'Space separated list of nbdev test flags to run that are normally ignored'
    required: false
    default: ''
  enable_git_lfs:
    description: 'Enable Git LFS?'
    required: false
    default: 'false'
  github_token:
    description: 'GitHub token'
    required: false
    default: '${{ github.token }}'
  private_pypi_auth_url:
    description: 'Private PyPI authentication URL'
    required: false
    default: ''
  torch_cpu:
    description: "Install PyTorch CPU instead of PyTorch Cuda.  Has no effect if PyTorch isn't a requirement.  Enabled by defaut."
    required: false
    default: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
      with:
        lfs: "${{ inputs.enable_git_lfs }}"  
        token: "${{ inputs.github_token }}"
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.version }}
        cache: "pip"
        cache-dependency-path: settings.ini
    - name: Test with nbdev
      env:
        USE_PRE: ${{ inputs.pre }}
        SKIP_TEST: ${{ inputs.skip_test }}
        PROD_EDITABLE_INSTALL: ${{ inputs.prod_editable_install }}
        FLAGS: ${{ inputs.flags }}
        PRIVATE_PYPI_AUTH_URL: ${{ inputs.private_pypi_auth_url }}
        TORCH_CPU: "${{ inputs.torch_cpu }}"
      shell: bash
      run: |
        set -ux
        python -m pip install --upgrade pip
        if [ $USE_PRE ]; then
          pip install -U git+https://github.com/fastai/fastcore.git
          pip install -U git+https://github.com/fastai/ghapi.git
          pip install -U git+https://github.com/fastai/execnb.git
          pip install -U git+https://github.com/fastai/nbdev.git
        else
          pip install -U nbdev
        fi
        echo "Doing editable install..."
        if [ ! -z "$PRIVATE_PYPI_AUTH_URL" ]; then
          pip config set global.extra-index-url $PRIVATE_PYPI_AUTH_URL
        fi
        if [ $PROD_EDITABLE_INSTALL == "true" ]; then
          test -f setup.py && pip install -e "."
          
        if [ $TORCH_CPU ]; then
          test -f setup.py && pip install -e ".[dev]" --extra-index-url https://download.pytorch.org/whl/cpu
        else
          test -f setup.py && pip install -e ".[dev]"
        fi
        echo "Check we are starting with clean git checkout"
        if [[ `git status --porcelain -uno` ]]; then
          git diff
          echo "git status is not clean"
          false
        fi
        echo "Trying to strip out notebooks"
        nbdev_clean
        echo "Check that strip out was unnecessary"
        git status -s # display the status to see which nbs need cleaning up
        if [[ `git status --porcelain -uno` ]]; then
          git status -uno
          echo -e "!!! Detected unstripped out notebooks\n!!!Remember to run nbdev_install_hooks"
          echo -e "This error can also happen if you are using an older version of nbdev relative to what is in CI.  Please try to upgrade nbdev with the command `pip install -U nbdev`"
          false
        fi
        nbdev_export
        if [[ `git status --porcelain -uno` ]]; then
          echo "::error::Notebooks and library are not in sync.  Please run nbdev_export."
          git status -uno
          git diff
          exit 1;
        fi
        if [ ! $SKIP_TEST ]; then
          nbdev_test --flags "$FLAGS"
        fi
